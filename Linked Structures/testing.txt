----------------------------------------
SingleList
Empty: true
Add values:
Empty: false
Peek: 0
Clear list:
Remove 0 from the list: 0
Remove 4 from the list: 4
Remove 15 (doesnt exist) from the list: null
Remove 5 from the list: 5
Removed: 1
Removed: 2
Removed: 3

--CLEAN/INSERT/COUNT/FIND/PREPEND--
Count how many 3's: 6
Find 8: 8
Print out List:
 15 3 0 1 3 2 3 3 3 4 5 8 3
Print out List:
 15 3 0 1 2 4 5 8

--SPLIT--

Print out source:

Print out left:
 15 3 0 1
Print out right:
 2 4 5 8

--COMBINE--

Print out source:
 1 8 0 5 3 4 15 2
Print out left:
Print out right:

--SPLITALTERNATE--

Print out source:

Print out left:
 1 0 3 15
Print out right:
 8 5 4 2

--CONTAINS (combined again)--

Contains 8: true

Contains 200: false

--GET--:
Source:
 15 2 3 4 0 5 1 8
 index 0, 3, 6, !100:1541

--IDENTICAL--
identical: true
not identical: false

--INDEX--
index of 3: 2
index of 23223: -1

--MAX--
max: 50

--MIN--
min: 0

--REVERSE--
Source:
 15 2 3 4 0 50 5 1 8
Source Reversed:
 8 1 5 50 0 4 3 2 15
--UNION--

Source after split:

left before union: 
 8 1 5 50 0
right before union: 
 4 3 2 15

!!Source after union:!!
 8 1 5 50 0 4 3 2 15
left after union: 
 8 1 5 50 0
right after union: 
 4 3 2 15
----------------------------------------
----------------------------------------
SingleStack
Empty: true
Add values: 
Empty: false
Peek: 5
Clear stack:
Popped: 5
Popped: 4
Popped: 3
Popped: 2
Popped: 1
Popped: 0
----------------------------------------
SingleQueue
Empty: true
Add values:
Empty: false
Peek: 0


Queue before remove: 
 0 1 2 3 4 5

Queue after remove: 
 1 2 3 4 5

Queue after split: 


leftq after split: 
 1 3 5

rightq after split: 
 2 4

!!Queue after combine:!! 
 2 1 4 3 5

leftq after combine: 

rightq after combine: 

----------------------------------------
SinglePriorityQueue
Empty: true
Add values:
Empty: false
Peek: 0

 PQ before clear: 
 0 1 2 3 4 5

Clear queue:
Removed:0
Removed:1
Removed:2
Removed:3
Removed:4
Removed:5
Removed:null

 PQ before splitbykey: 
 1 2 3 4 5 6 7 8 9 10

 !!PQ after splitbykey middle:!! 

 higher after splitbykey middle: 
 1 2 3 4
 lower after splitbykey middle:  
 5 6 7 8 9 10